// import React from 'react';
// import { Link, NavLink } from 'react-router-dom';

// const NavBar = () => (
//   <div>
//     <div className="back-image" />
//     <div className="top row">
//       <Link to="/h" className="col-8 logo"><h2>Book-A-Meal</h2></Link>
//       <nav className="menu col-4">
//         <li className="col-3"><NavLink to="/menu" activeClassName="active">Menu</NavLink></li>
//         <li className="col-3"><NavLink to="/cart" activeClassName="active">Order</NavLink></li>
//         <li className="col-3"><NavLink to="/login" activeClassName="active">SignIn</NavLink></li>
//         <li className="col-3"><NavLink to="/signup" activeClassName="active">Signup</NavLink></li>
//       </nav>
//     </div>
//   </div>
// );
// export default NavBar;


import React, { Component } from 'react';
import { Link, NavLink } from 'react-router-dom';
import { connect } from 'react-redux';
import PropTypes from 'prop-types';
import styles from '../../assets/styles/navbar.css';
import { Icon } from 'antd';
import { Sidebar, Segment, Menu, Header, Image } from 'semantic-ui-react';

const UserNavBar = ({ logout, isAuthenticated, userName, visibleSideBar }) => {
  let navlinkVisibility = 'show';
  let signedinVisibility = 'hide';
  if (isAuthenticated) {
    navlinkVisibility = 'hide';
    signedinVisibility = 'show';
  }
  const openNav = () => this.setState({ visibleSideBar: true });

  const handleSidebarHide = () => this.setState({ visibleSideBar: false });
  // const openNav = () => {
  //   visibleSideBar = true;
  //   return visibleSideBar;
  // };
  // const handleSidebarHide = () => {
  //   visibleSideBar = false;
  //   return visibleSideBar;
  // };
  return (
    <div>
      <div className="topnav row" id="myTopnav">
        <button className="icon" onClick={openNav()}>
          <i className="fa fa-bars" />
          {/* <Icon type="menu-unfold" /> */}
        </button>
        <div className="col-6">
          <a href="#home" className="navlogo col-5">BOOK-A-MEAL</a>
        </div>
        <nav className="col-6 navgroup">
          <li className={`col-3 navlink ${signedinVisibility}`}>{userName}</li>
          <NavLink className="col-3 show navlink" to="/menu" activeClassName="active">Menu</NavLink>
          <NavLink className="col-3 show navlink" to="/myorders" activeClassName="active">Order</NavLink>
          <NavLink className={`col-3 navlink ${navlinkVisibility}`} to="/auth" activeClassName="active">SignIn</NavLink>
          {/* <NavLink className={`col-3 navlink ${navlinkVisibility}`} to="/signup" activeClassName="active">SignUp</NavLink> */}
          <NavLink className={`col-3 navlink out ${signedinVisibility}`} activeClassName="active" to="/login" onClick={(e) => { e.preventDefault(); logout(); }}>logout</NavLink>
        </nav>
      </div>
      <Sidebar.Pushable as={Segment}>
        <Sidebar
          as={Menu}
          animation="overlay"
          icon='labeled'
          inverted
          onHide={handleSidebarHide()}
          vertical
          visible={visibleSideBar}
          width='thin'
        >
          <Menu.Item as='a'>
            <Icon name='home' />
            Home
          </Menu.Item>
          <Menu.Item as='a'>
            <Icon name='gamepad' />
            Games
          </Menu.Item>
          <Menu.Item as='a'>
            <Icon name='camera' />
            Channels
          </Menu.Item>
        </Sidebar>

        <Sidebar.Pusher dimmed={visibleSideBar}>
          <Segment basic>
            <Header as='h3'>Application Content</Header>
            <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' />
          </Segment>
        </Sidebar.Pusher>
      </Sidebar.Pushable>
    </div>
  );
};

UserNavBar.defaultProps = {
  userName: undefined,
  isAuthenticated: false,
  isCaterer: false,
};

UserNavBar.propTypes = {
  userName: PropTypes.string,
  isAuthenticated: PropTypes.bool,
  isCaterer: PropTypes.bool,
  logout: PropTypes.func.isRequired,
};


/**
 * @desc maps state to props;
 * @param {*} state store state
 * @returns {*} store state
 */
const mapStateToProps = state => ({
  isAuthenticated: state.authReducer.isAuthenticated,
  isCaterer: state.authReducer.isCaterer,
  userName: state.authReducer.userName,
});

export default connect(mapStateToProps)(UserNavBar);
